{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\react_weatherapp\\\\weather-frontend\\\\src\\\\components\\\\Forecast\\\\Forecast.js\";\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\nconst Forecast = () => {\n  let [city, setCity] = useState('');\n  let [responseObj, setResponseObj] = useState({});\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n    fetch(`\n        https://weatherapi-backend.azurewebsites.net/api/WeatherAPI/${uriEncodedCity}`, {\n      \"method\": \"GET\"\n    }).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter City\",\n    maxLength: \"50\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Get Forecast\")), /*#__PURE__*/React.createElement(Conditions, {\n    responseObj: responseObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["D:/Dev/react_weatherapp/weather-frontend/src/components/Forecast/Forecast.js"],"names":["React","useState","Conditions","classes","Forecast","city","setCity","responseObj","setResponseObj","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","fetch","then","response","json","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMQ,cAAc,GAAGC,kBAAkB,CAACL,IAAD,CAAzC;;AACA,WAASM,WAAT,CAAqBC,CAArB,EAAwB;AAEpBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,KAAK,CAAE;sEACuDL,cAAe,EADxE,EAC2E;AAC5E,gBAAU;AADkE,KAD3E,CAAL,CAICM,IAJD,CAIMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKMC,QAAQ,IAAI;AACdR,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACH,KAPD;AAQH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADH,eAEG;AAAM,IAAA,QAAQ,EAAEL,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,SAAS,EAAC,IAHd;AAII,IAAA,KAAK,EAAEN,IAJX;AAKI,IAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAQK;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARL,CAFH,eAYG,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEZ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZH,CADJ;AAgBH,CAjCD;;AAmCA,eAAeH,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Conditions from '../Conditions/Conditions';\r\nimport classes from './Forecast.module.css'\r\n\r\nconst Forecast = () => {\r\n    let [city, setCity] = useState('');\r\n    let [responseObj, setResponseObj] = useState({});\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n    function getForecast(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        fetch(`\r\n        https://weatherapi-backend.azurewebsites.net/api/WeatherAPI/${uriEncodedCity}`, {\r\n            \"method\": \"GET\",\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            setResponseObj(response)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n           <h2>Find Current Weather Conditions</h2>\r\n           <form onSubmit={getForecast}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City\"\r\n                    maxLength=\"50\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                <button type=\"submit\">Get Forecast</button>\r\n            </form>\r\n           <Conditions responseObj={responseObj}/>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}