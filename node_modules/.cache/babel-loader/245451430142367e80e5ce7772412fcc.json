{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\react_weatherapp\\\\weather-frontend\\\\src\\\\components\\\\Forecast\\\\Forecast2.js\";\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\nconst Forecast2 = () => {\n  let [city, setCity] = useState('');\n  let [responseObj, setResponseObj] = useState({});\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n  const uriEncodedCity = encodeURIComponent(city);\n  let letters = /^[A-Za-z]+$/;\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    if (city.length === 0 && city.match(letters)) {\n      return setError(true);\n    }\n\n    setError(false);\n    setResponseObj({});\n    setLoading(true);\n    fetch(`https://weatherapi-am.azure-api.net/weather?q=${uriEncodedCity}`, {\n      \"method\": \"GET\"\n    }).then(response => response.json()).then(response => {\n      if (response.cod !== 200) {\n        throw new Error();\n      }\n\n      setResponseObj(response);\n      setLoading(false);\n    }).catch(err => {\n      setError(true);\n      setLoading(false);\n      console.log(err.message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, \"Using Azure Web API Management\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter City\",\n    maxLength: \"50\",\n    className: classes.textInput,\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Get Forecast\")), /*#__PURE__*/React.createElement(Conditions, {\n    responseObj: responseObj,\n    error: error,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default Forecast2;","map":{"version":3,"sources":["D:/Dev/react_weatherapp/weather-frontend/src/components/Forecast/Forecast2.js"],"names":["React","useState","Conditions","classes","Forecast2","city","setCity","responseObj","setResponseObj","error","setError","loading","setLoading","uriEncodedCity","encodeURIComponent","letters","getForecast","e","preventDefault","length","match","fetch","then","response","json","cod","Error","catch","err","console","log","message","textInput","target","value","Button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAI,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMY,cAAc,GAAGC,kBAAkB,CAACT,IAAD,CAAzC;AACA,MAAIU,OAAO,GAAG,aAAd;;AAEA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AAEpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIb,IAAI,CAACc,MAAL,KAAgB,CAAhB,IAAqBd,IAAI,CAACe,KAAL,CAAWL,OAAX,CAAzB,EAA+C;AAC3C,aAAOL,QAAQ,CAAC,IAAD,CAAf;AACH;;AAEDA,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAS,IAAAA,KAAK,CAAE,iDAAgDR,cAAe,EAAjE,EAAoE;AACrE,gBAAU;AAD2D,KAApE,CAAL,CAGCS,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACE,GAAT,KAAiB,GAArB,EAA0B;AACtB,cAAM,IAAIC,KAAJ,EAAN;AACH;;AAEDlB,MAAAA,cAAc,CAACe,QAAD,CAAd;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD,EAYCe,KAZD,CAYOC,GAAG,IAAI;AACVlB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAhBD;AAiBH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFH,eAGG;AAAM,IAAA,QAAQ,EAAEf,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACS,IAAA,IAAI,EAAC,MADd;AAES,IAAA,WAAW,EAAC,YAFrB;AAGS,IAAA,SAAS,EAAC,IAHnB;AAIS,IAAA,SAAS,EAAEb,OAAO,CAAC6B,SAJ5B;AAKS,IAAA,KAAK,EAAE3B,IALhB;AAMS,IAAA,QAAQ,EAAGY,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACgB,MAAF,CAASC,KAAV,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASK;AAAQ,IAAA,SAAS,EAAE/B,OAAO,CAACgC,MAA3B;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATL,CAHH,eAcG,oBAAC,UAAD;AACK,IAAA,WAAW,EAAE5B,WADlB;AAEK,IAAA,KAAK,EAAEE,KAFZ;AAGK,IAAA,OAAO,EAAEE,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,CADJ;AAsBH,CA5DD;;AA8DA,eAAeP,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Conditions from '../Conditions/Conditions';\r\nimport classes from './Forecast.module.css'\r\n\r\nconst Forecast2 = () => {\r\n    let [city, setCity] = useState('');\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [error, setError] = useState(false);\r\n    let [loading, setLoading] = useState(false);\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n    let letters = /^[A-Za-z]+$/;\r\n\r\n    function getForecast(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        if (city.length === 0 && city.match(letters) ) {\r\n            return setError(true);\r\n        }\r\n\r\n        setError(false);\r\n        setResponseObj({});       \r\n        setLoading(true);\r\n\r\n        fetch(`https://weatherapi-am.azure-api.net/weather?q=${uriEncodedCity}`, {\r\n            \"method\": \"GET\",\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.cod !== 200) {\r\n                throw new Error()\r\n            }\r\n\r\n            setResponseObj(response)\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            setError(true);\r\n            setLoading(false);\r\n            console.log(err.message);\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n           <h2>Find Current Weather Conditions</h2>\r\n           <h2>Using Azure Web API Management</h2>\r\n           <form onSubmit={getForecast}>\r\n           <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City\"\r\n                    maxLength=\"50\"\r\n                    className={classes.textInput}\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\r\n            </form>\r\n           <Conditions \r\n                responseObj={responseObj}\r\n                error={error}\r\n                loading={loading}\r\n                />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Forecast2;"]},"metadata":{},"sourceType":"module"}